[{"path":"https://jameelalsalam.github.io/eia2/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 eia2 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jameelalsalam.github.io/eia2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jameel Alsalam. Author, maintainer. Matthew Leonawicz. Contributor.","code":""},{"path":"https://jameelalsalam.github.io/eia2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Alsalam J (2023). eia2: Wrapper US Energy Information Administration API Version 2. R package version 0.0.0.9003, https://jameelalsalam.github.io/eia2/.","code":"@Manual{,   title = {eia2: Wrapper for the US Energy Information Administration API Version 2},   author = {Jameel Alsalam},   year = {2023},   note = {R package version 0.0.0.9003},   url = {https://jameelalsalam.github.io/eia2/}, }"},{"path":"https://jameelalsalam.github.io/eia2/index.html","id":"eia2","dir":"","previous_headings":"","what":"Wrapper for the US Energy Information Administration API Version 2","title":"Wrapper for the US Energy Information Administration API Version 2","text":"eia2 package provides functions download data US Energy Information Administration Open Data API version 2. Using EIA API (via package means) requires registered API key. EIA provides data browser documentation API concepts helpful understanding usage package.","code":""},{"path":"https://jameelalsalam.github.io/eia2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Wrapper for the US Energy Information Administration API Version 2","text":"can install development version eia2 GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"jameelalsalam/eia2\")"},{"path":"https://jameelalsalam.github.io/eia2/index.html","id":"authentication","dir":"","previous_headings":"","what":"Authentication","title":"Wrapper for the US Energy Information Administration API Version 2","text":"Ensure API key available setting environment variable. can add user-level .Renviron file : adding line : EIA_KEY= restarting, running Sys.getenv(\"EIA_KEY\") eia_get_key() return key. Alternatively, key can stored package environment options using eia_set_key(). security, make sure record API key files tracked git .Rhistory.","code":"usethis::edit_r_environ(\"user\")"},{"path":"https://jameelalsalam.github.io/eia2/index.html","id":"explore-available-data","dir":"","previous_headings":"","what":"Explore Available Data","title":"Wrapper for the US Energy Information Administration API Version 2","text":"can browse available datasets: iteratively explore routes within dataset, : get bottom route, won’t routes, need specify parameters retrieve data, data columns retrieve. finally download data : full API call can also specify facet filters different start end dates.","code":"library(eia2)  eia2() #> $routes #>  [1] \"coal\"              \"crude-oil-imports\" \"electricity\"       #>  [4] \"international\"     \"natural-gas\"       \"nuclear-outages\"   #>  [7] \"petroleum\"         \"seds\"              \"steo\"              #> [10] \"densified-biomass\" \"total-energy\"      \"aeo\"               #> [13] \"ieo\"               \"co2-emissions\" eia2(\"electricity\") #> $id #> [1] \"electricity\" #>  #> $name #> [1] \"Electricity\" #>  #> $description #> [1] \"EIA electricity survey data\" #>  #> $routes #> [1] \"retail-sales\"                    \"electric-power-operational-data\" #> [3] \"rto\"                             \"state-electricity-profiles\"      #> [5] \"operating-generator-capacity\"    \"facility-fuel\" eia2(\"electricity/retail-sales\") #> $id #> [1] \"retail-sales\" #>  #> $name #> [1] \"Electricity Sales to Ultimate Customers\" #>  #> $description #> [1] \"Electricity sales to ultimate customer by state and sector (number of customers, average price, revenue, and megawatthours of sales).  \\n    Sources: Forms EIA-826, EIA-861, EIA-861M\" #>  #> $frequency #> [1] \"monthly\"   \"quarterly\" \"annual\"    #>  #> $facets #> [1] \"stateid\"  \"sectorid\" #>  #> $data #> [1] \"revenue\"   \"sales\"     \"price\"     \"customers\" #>  #> $startPeriod #> [1] \"2001-01\" #>  #> $endPeriod #> [1] \"2023-02\" #>  #> $defaultDateFormat #> [1] \"YYYY-MM\" #>  #> $defaultFrequency #> [1] \"monthly\" elec_retail_sales_annual_data <-   eia2(\"electricity/retail-sales\", frequency = \"annual\", data_cols = \"revenue\")  elec_retail_sales_annual_data #> # A tibble: 5,000 × 7 #>    period stateid stateDescription   sectorid sectorName revenue `revenue-units` #>     <int> <chr>   <chr>              <chr>    <chr>        <dbl> <chr>           #>  1   2022 AL      Alabama            ALL      all secto… 10299.  million dollars #>  2   2022 CO      Colorado           RES      residenti…  2978.  million dollars #>  3   2022 CO      Colorado           OTH      other         NA   million dollars #>  4   2022 CO      Colorado           IND      industrial  1357.  million dollars #>  5   2022 CO      Colorado           COM      commercial  2446.  million dollars #>  6   2022 CO      Colorado           ALL      all secto…  6790.  million dollars #>  7   2022 CA      California         TRA      transport…    93.1 million dollars #>  8   2022 CA      California         RES      residenti… 23661.  million dollars #>  9   2022 DC      District of Colum… ALL      all secto…  1528.  million dollars #> 10   2022 DE      Delaware           TRA      transport…     0   million dollars #> # ℹ 4,990 more rows elec_retail_CO <-    eia2(\"electricity/retail-sales\",        frequency = \"monthly\",        facets = list(          stateid = c(\"CO\", \"WY\")        ),        data_cols = c(\"revenue\"),        start = \"2020-01\",        end = \"2020-03\")  elec_retail_CO #> # A tibble: 36 × 7 #>    period  stateid stateDescription sectorid sectorName  revenue `revenue-units` #>    <chr>   <chr>   <chr>            <chr>    <chr>         <dbl> <chr>           #>  1 2020-03 WY      Wyoming          RES      residential  28.4   million dollars #>  2 2020-03 WY      Wyoming          TRA      transporta…   0     million dollars #>  3 2020-03 CO      Colorado         RES      residential 177.    million dollars #>  4 2020-03 CO      Colorado         TRA      transporta…   0.710 million dollars #>  5 2020-03 CO      Colorado         ALL      all sectors 434.    million dollars #>  6 2020-03 CO      Colorado         COM      commercial  161.    million dollars #>  7 2020-03 WY      Wyoming          IND      industrial   56.3   million dollars #>  8 2020-03 WY      Wyoming          COM      commercial   27.6   million dollars #>  9 2020-03 WY      Wyoming          ALL      all sectors 112.    million dollars #> 10 2020-03 CO      Colorado         OTH      other        NA     million dollars #> # ℹ 26 more rows"},{"path":"https://jameelalsalam.github.io/eia2/index.html","id":"moving-from-api-version-1","dir":"","previous_headings":"","what":"Moving from API version 1","title":"Wrapper for the US Energy Information Administration API Version 2","text":"EIA version 2 API provides mechanism retrieve similar data available via series ID API endpoint version 1 API. web form EIA Open Data website can help translate version 1 series IDs version 2 routes. addition, package provides function eia1_series can make requests using legacy series id’s.","code":"eia1_series(\"ELEC.SALES.CO-RES.A\") #> # A tibble: 22 × 7 #>    period stateid stateDescription sectorid sectorName   sales `sales-units`     #>     <int> <chr>   <chr>            <chr>    <chr>        <dbl> <chr>             #>  1   2022 CO      Colorado         RES      residential 20834. million kilowatt… #>  2   2021 CO      Colorado         RES      residential 20625. million kilowatt… #>  3   2020 CO      Colorado         RES      residential 20483. million kilowatt… #>  4   2019 CO      Colorado         RES      residential 19405. million kilowatt… #>  5   2018 CO      Colorado         RES      residential 19287. million kilowatt… #>  6   2017 CO      Colorado         RES      residential 18615. million kilowatt… #>  7   2016 CO      Colorado         RES      residential 18834. million kilowatt… #>  8   2015 CO      Colorado         RES      residential 18385. million kilowatt… #>  9   2014 CO      Colorado         RES      residential 18093. million kilowatt… #> 10   2013 CO      Colorado         RES      residential 18529. million kilowatt… #> # ℹ 12 more rows"},{"path":"https://jameelalsalam.github.io/eia2/index.html","id":"specifying-related-data-via-parameters-and-facets","dir":"","previous_headings":"","what":"Specifying Related Data via Parameters and Facets","title":"Wrapper for the US Energy Information Administration API Version 2","text":"EIA version 2 API organizes dataset topics using routes, allows specification various parameters facets narrow specific data requested. …","code":""},{"path":"https://jameelalsalam.github.io/eia2/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Wrapper for the US Energy Information Administration API Version 2","text":"eia2 based previous work Matthew Leonawicz eia package. benefited many useful packages resources including httr2, ropensci package guide, HTTP testing R.","code":""},{"path":"https://jameelalsalam.github.io/eia2/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"Wrapper for the US Energy Information Administration API Version 2","text":"package authors affiliated Energy Information Administration. reproduce data include acknowledgement publication date, : “Source: U.S. Energy Information Administration (Oct 2008).” information, please see EIA’s Copyrights Reuse page.","code":""},{"path":"https://jameelalsalam.github.io/eia2/notes.html","id":null,"dir":"","previous_headings":"","what":"Notes on eia2 development","title":"Notes on eia2 development","text":"support keyring storing api_key securely roundtrip request -> perform -> extract request response test low-level query_params_expand test url’s constructed expected tests API assumptions (run CRAN) tests along lines DB test suite ensure API credentials don’t leak CI / Github Actions caching API requests README Suggested citation EIA data citHeader citEntry? https://devguide.ropensci.org/building.html Getting started vignette split low-level function (flexible, close API vocab, won’t break) high-level UI functions Low-level helper query parameters progress bar?: https://github.com/r-lib/httr2/issues/20 autocompletion available metadata? shiny app like query browser? pkgdown test coverage ropensci package dev guide print method friendlier response? (subtype httr2 response type?) pretty printing e.g., cli? use vcr recording API responses? DESCRIPTION file details, licensing, authorship, crediting","code":""},{"path":"https://jameelalsalam.github.io/eia2/notes.html","id":"resources","dir":"","previous_headings":"","what":"Resources:","title":"Notes on eia2 development","text":"HTTP testing R book: https://books.ropensci.org/http-testing/index.html Video UseR 2021 Tutorial package testing: https://www.youtube.com/watch?v=tzQGg1kAzGs&t=4650s&ab_channel=RConsortium rOpenSci Package DevGuide: https://devguide.ropensci.org/ R Packages book: https://r-pkgs.org/ httr2 vignette, “Wrapping APIs”: https://httr2.r-lib.org/articles/wrapping-apis.html","code":""},{"path":[]},{"path":"https://jameelalsalam.github.io/eia2/notes.html","id":"continuous-integration","dir":"","previous_headings":"","what":"Continuous Integration","title":"Notes on eia2 development","text":"Ropensci advice re: CI (including Feb 2023 community call). r-lib github actions example CI eia package (although outdated)","code":""},{"path":"https://jameelalsalam.github.io/eia2/notes.html","id":"caching-api-requests","dir":"","previous_headings":"","what":"Caching API Requests","title":"Notes on eia2 development","text":"httr2 package response caching, based whether API reports cachable results expire. case EIA API, expiration nearly immediate, significant caching possible httr2 mechanism. right approach. eia package within-session caching requests via memoisation. seems like feasible approach. Within targets pipelines results cached, wonderful better tools specifying target based API call invalidated. Probably ropensci API packages examples best-practice caching.","code":""},{"path":"https://jameelalsalam.github.io/eia2/notes.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies:","title":"Notes on eia2 development","text":"R >= 4.1.0 b/c pipe purrr >= 1.0.0 b/c pluck_depth","code":""},{"path":"https://jameelalsalam.github.io/eia2/notes.html","id":"low-level-helper-to-build-arraynested-query-parameters","dir":"","previous_headings":"","what":"Low-level helper to build array/nested query parameters","title":"Notes on eia2 development","text":"EIAv2 API several query parameters nested. However, httr2 functions adding query parameters requests work length-1 atomic query parameters. like best document extent HTTP standard formats comprehensively supported array/nested query parameters (just EIA API). Specification: - application/x-www-form-urlencoded - https://www.rfc-editor.org/rfc/rfc3875#section-4.1.7 looked number packages mentioned CRAN task view web/http, find package covering need. Packages checked: - webutils (ropensci) - urltools - request - httpuv (rstudio) -> ? - V8 ?","code":""},{"path":[]},{"path":"https://jameelalsalam.github.io/eia2/notes.html","id":"urltools","dir":"","previous_headings":"Low-level helper to build array/nested query parameters","what":"urltools","title":"Notes on eia2 development","text":"library(urltools) urltools::param_set(“example.com”, “x”, c(1, 2))","code":""},{"path":"https://jameelalsalam.github.io/eia2/notes.html","id":"request","dir":"","previous_headings":"Low-level helper to build array/nested query parameters","what":"request","title":"Notes on eia2 development","text":"r <- request(“example.com”) str(r) r |> cat(rawToChar(r$content))","code":""},{"path":"https://jameelalsalam.github.io/eia2/notes.html","id":"httpuv","dir":"","previous_headings":"Low-level helper to build array/nested query parameters","what":"httpuv","title":"Notes on eia2 development","text":"httpuv::encodeURI","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia1_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Request Data Using Legacy APIv1 Series ID Compatibility Endpoint — eia1_series","title":"Request Data Using Legacy APIv1 Series ID Compatibility Endpoint — eia1_series","text":"Request Data Using Legacy APIv1 Series ID Compatibility Endpoint","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia1_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Request Data Using Legacy APIv1 Series ID Compatibility Endpoint — eia1_series","text":"","code":"eia1_series(series_id)  eia1_series_req(series_id)"},{"path":"https://jameelalsalam.github.io/eia2/reference/eia1_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Request Data Using Legacy APIv1 Series ID Compatibility Endpoint — eia1_series","text":"series_id EIA APIv1 series ID (length 1 character).","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia1_series.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Request Data Using Legacy APIv1 Series ID Compatibility Endpoint — eia1_series","text":"tibble series data, eia1_series_req request object","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia1_series.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Request Data Using Legacy APIv1 Series ID Compatibility Endpoint — eia1_series","text":"","code":"if (FALSE) { eia1_series(\"ELEC.SALES.CO-RES.A\") }"},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2-package.html","id":null,"dir":"Reference","previous_headings":"","what":"eia2: Wrapper for the US Energy Information Administration API Version 2 — eia2-package","title":"eia2: Wrapper for the US Energy Information Administration API Version 2 — eia2-package","text":"Provides API access open data API US Energy Information Administration (EIA) https://www.eia.gov/opendata/. Use API requires free API key. package includes functions request data using API parameters including data columns, facets, start end dates, sorting. version 2 API provides compatibility endpoint retrieving data using version 1 API series ID's.","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"eia2: Wrapper for the US Energy Information Administration API Version 2 — eia2-package","text":"Maintainer: Jameel Alsalam jalsalam@gmail.com (ORCID) contributors: Matthew Leonawicz mfleonawicz@gmail.com (ORCID) [contributor]","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve data from the EIA API — eia2","title":"Retrieve data from the EIA API — eia2","text":"Retrieve data EIA API","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve data from the EIA API — eia2","text":"","code":"eia2(   route = \"\",   facets = list(),   data_cols = character(),   frequency = NULL,   start = NULL,   end = NULL,   sort = data.frame(column = \"period\", direction = \"desc\"),   offset = 0,   length = 5000,   out = \"json\",   api_key = eia_get_key() )"},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve data from the EIA API — eia2","text":"route base dataset facets list facet filter specifications data_cols names data columns retrieve frequency data frequency start filter start data requested end filter end data requested sort data frame specifying sorting offset starting position, paged results length number data points retrieve output data format, \"json\" \"xml\" api_key character api key","code":""},{"path":[]},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve data from the EIA API — eia2","text":"","code":"if (FALSE) { eia2(\"electricity/retail-sales\", data_cols = \"price\", length = 10) }"},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2_facet.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine Valid Values of a Facet — eia2_facet","title":"Determine Valid Values of a Facet — eia2_facet","text":"Determine Valid Values Facet","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2_facet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine Valid Values of a Facet — eia2_facet","text":"","code":"eia2_facet(dataset, facet)"},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2_facet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine Valid Values of a Facet — eia2_facet","text":"dataset route EIA dataset facet id facet query valid values (length 1 character)","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2_facet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine Valid Values of a Facet — eia2_facet","text":"tibble valid facet values (id & name)","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2_req_perform.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform an eia2 request — eia2_req_perform","title":"Perform an eia2 request — eia2_req_perform","text":"preparing request, call eia2_req_perform() perform , fetching results back R response. eia2_req_perform() wraps httr2::req_perform(). api_key added request object request performed. Additionally, applies rate limit behavior comply API guidelines.","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2_req_perform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform an eia2 request — eia2_req_perform","text":"","code":"eia2_req_perform(   req,   path = NULL,   verbosity = NULL,   mock = getOption(\"httr2_mock\", NULL),   rate = getOption(\"eia2_rate\", 4),   api_key = eia_get_key() )"},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2_req_perform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform an eia2 request — eia2_req_perform","text":"req eia2 request. path Optionally, path save body response. verbosity much information print? integer 0 3, passed httr2::request_perform(). mock mocking function. Passed httr2::request_perform(). rate Maximum request rate requests per second, passed httr2::req_throttle(). api_key API authentication key.","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2_resp_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract formatted data from responses — eia2_resp_data","title":"Extract formatted data from responses — eia2_resp_data","text":"use stepwise workflow eia2_request() -> eia2_req_perform(), next step extract useful data responses. data requests, eia2_resp_data() returns body data tibble. metadata requests: eia2_resp_meta_routes() returns metadata child routes tibble. eia2_resp_meta_summary() returns summary metadata lists.","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2_resp_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract formatted data from responses — eia2_resp_data","text":"","code":"eia2_resp_data(eia_resp)  eia2_resp_meta_routes(eia_resp)  eia2_resp_meta_summary(eia_resp)"},{"path":"https://jameelalsalam.github.io/eia2/reference/eia2_resp_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract formatted data from responses — eia2_resp_data","text":"eia_resp response object.","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Set and get API key — eia_key","title":"Set and get API key — eia_key","text":"Set get API key","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set and get API key — eia_key","text":"","code":"eia_set_key(key, store = c(\"env\", \"options\", \"sysenv\"))  eia_get_key(store = c(\"env\", \"options\", \"sysenv\"))"},{"path":"https://jameelalsalam.github.io/eia2/reference/eia_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set and get API key — eia_key","text":"key character, API key. store character, method storing API key. See details.","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set and get API key — eia_key","text":"eia_get_key returns key string NULL warning. eia_set_key returns success message error.","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia_key.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set and get API key — eia_key","text":"Setter getter helpers allow store EIA API key one three ways. use optional. can always pass API key string key argument package function requires , although recommended avoid exposing API key scripts. default key argument functions key = eia_get_key(). key stored manner can retrieved, can call package API functions without provide key argument repeatedly.","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia_key.html","id":"key-storage-methods","dir":"Reference","previous_headings":"","what":"Key storage methods","title":"Set and get API key — eia_key","text":"already set key globally somewhere using eia_set_key, eia_get_key retrieve . can add EIA_KEY = \"yourkey\" key-value pair options() system environment variable eia_get_key pick long use name EIA_KEY. convenience can R session eia_set_key. gives three options store key. default use eia package environment created package loaded.","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia_key.html","id":"precedence","dir":"Reference","previous_headings":"","what":"Precedence","title":"Set and get API key — eia_key","text":"Choose one method setting key. getting key, three locations checked order: package environment, options(), system environment. override order, specify method explicitly check occur . also makes possible override system level key working one stored package environment options().","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia_key.html","id":"persistence","dir":"Reference","previous_headings":"","what":"Persistence","title":"Set and get API key — eia_key","text":"Note none three storage methods, including \"sysenv\" persistent; stored key lost R session terminated. key stored outside R system environment variable retrievable eia_get_key, just like set R session eia_set_key store = \"sysenv\". However, truly want key persist environment variable R terminates, must manually add somewhere like .Renviron; Sys.setenv R achieve .","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/eia_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set and get API key — eia_key","text":"","code":"eia_set_key(\"fake\") #> Key stored successfully in package environment. eia_get_key() #> [1] \"fake\" # eia_get_key(\"options\") returns an error if not set"},{"path":"https://jameelalsalam.github.io/eia2/reference/request.html","id":null,"dir":"Reference","previous_headings":"","what":"Request data from EIA API version 2 — eia2_req","title":"Request data from EIA API version 2 — eia2_req","text":"Request data EIA API version 2","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Request data from EIA API version 2 — eia2_req","text":"","code":"eia2_req(   route = \"\",   facets = list(),   data_cols = character(),   frequency = NULL,   start = NULL,   end = NULL,   sort = data.frame(column = \"period\", direction = \"desc\"),   offset = 0,   length = 5000,   out = \"json\",   api_key = NULL )"},{"path":"https://jameelalsalam.github.io/eia2/reference/request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Request data from EIA API version 2 — eia2_req","text":"route base dataset facets list facet filter specifications data_cols names data columns retrieve frequency data frequency start filter start data requested end filter end data requested sort data frame specifying sorting offset starting position, paged results length number data points retrieve output data format, \"json\" \"xml\" api_key character api key, NULL omit","code":""},{"path":"https://jameelalsalam.github.io/eia2/reference/request.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Request data from EIA API version 2 — eia2_req","text":"","code":"eia2_req(\"electricity\") #> <httr2_request> #> GET #> https://api.eia.gov/v2/electricity?sort%5B0%5D%5Bcolumn%5D=period&sort%5B0%5D%5Bdirection%5D=desc #> Body: empty #> Options: #> • useragent: 'eia2 (http://github.com/jameelalsalam/eia2)' #> Policies: #> • error_body: a function eia2_req(\"electricity/retail-sales\") #> <httr2_request> #> GET #> https://api.eia.gov/v2/electricity/retail-sales?sort%5B0%5D%5Bcolumn%5D=period&sort%5B0%5D%5Bdirection%5D=desc #> Body: empty #> Options: #> • useragent: 'eia2 (http://github.com/jameelalsalam/eia2)' #> Policies: #> • error_body: a function eia2_req(\"electricity/retail-sales/data\") #> <httr2_request> #> GET #> https://api.eia.gov/v2/electricity/retail-sales/data?sort%5B0%5D%5Bcolumn%5D=period&sort%5B0%5D%5Bdirection%5D=desc #> Body: empty #> Options: #> • useragent: 'eia2 (http://github.com/jameelalsalam/eia2)' #> Policies: #> • error_body: a function eia2_req(\"electricity/retail-sales/data\", data_cols = \"price\") #> <httr2_request> #> GET #> https://api.eia.gov/v2/electricity/retail-sales/data?data%5B0%5D=price&sort%5B0%5D%5Bcolumn%5D=period&sort%5B0%5D%5Bdirection%5D=desc #> Body: empty #> Options: #> • useragent: 'eia2 (http://github.com/jameelalsalam/eia2)' #> Policies: #> • error_body: a function eia2_req(\"electricity/retail-sales\", data_cols = \"price\") # same as one above #> <httr2_request> #> GET #> https://api.eia.gov/v2/electricity/retail-sales/data?data%5B0%5D=price&sort%5B0%5D%5Bcolumn%5D=period&sort%5B0%5D%5Bdirection%5D=desc #> Body: empty #> Options: #> • useragent: 'eia2 (http://github.com/jameelalsalam/eia2)' #> Policies: #> • error_body: a function"}]
